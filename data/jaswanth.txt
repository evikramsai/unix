aNotepad.com - free online notepad
Home
Features
About
Feedback
Register/Login
Untitled 1/24/2019 8:41:06 AM
Share?
 Lab 1. Introduction to Data Dictionary
1.SELECT OBJECT_NAME,OBJECT_TYPE FROM USER_OBJECTS;
2.SELECT TABLE_NAME FROM USER_TABLES;
3.SELECT TABLE_NAME,COLUMN_NAME FROM USER_TAB_COLUMNS;
4.SELECT COLUMN_NAME,CONSTRAINT_NAME FROM USER_CONS_COLUMNS;
Lab 2. Introduction to PL/SQL and Cursors
3. CREATE OR REPLACE PROCEDURE STF_PROC(P_DPTNO STAFFF.DPTNO%TYPE)
AS
CURSOR STF1_CUR IS SELECT STF_ID,STF_NAME,STF_SAL FROM STAFFF WHERE DPTNO=P_DPTNO; 
V_STF1 STF1_CUR%ROWTYPE;
BEGIN
OPEN STF1_CUR;
LOOP
FETCH STF1_CUR INTO V_STF1;
EXIT WHEN STF1_CUR % NOTFOUND;
DBMS_OUTPUT.PUT_LINE('STAFF ID IS:’ || V_STF1.STF_ID);
DBMS_OUTPUT.PUT_LINE('STAFF NAME IS:’ || V_STF1. STF_NAME);
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS:’ || V_STF1.STF_SAL);
END LOOP;	
CLOSE STF1_CUR;
EXCEPTION
WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('NO STAFF RECORD AVAILABLE’);
WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('SOMETHING WENT WRONG’);
END;

4. CREATE OR REPLACE PROCEDURE STF_PROC(P_DPTNO NUMBER)
AS
V_STF1 STAFFF%ROWTYPE;
P_SAL  NUMBER(10):=0;
BEGIN
SELECT * INTO V_STF1 FROM STAFFF WHERE DPTNO=P_DPTNO;
IF V_STF1.STF_SAL*0.3>5000
THEN
P_SAL :=P_SAL+V_STF1.STF_SAL+5000;
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS:’ || P_SAL);
ELSE
P_SAL :=P_SAL+V_STF1.STF_SAL+ V_STF1.STF_SAL*0.3;
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS:’ || P_SAL);
END IF;
END;


5. CREATE OR REPLACE PROCEDURE PROC(P_NAME VARCHAR)
AS
VAR1 STAFFF%ROWTYPE;
PERCENTAGE NUMBER(10);
GRADE VARCHAR(3);
TOTAL NUMBER(10);
BEGIN
SELECT * INTO VAR1 FROM STAFFF WHERE STF_NAME=P_NAME;
TOTAL:=(VAR1.SUBJECT1+VAR1.SUBJECT2+VAR1.SUBJECT3);
PERCENTAGE:=(TOTAL/300)*100;
IF PERCENTAGE>=80
THEN
GRADE:=’A’;
ELSIF PERCENTAGE>=70 AND PERCENTAGE<80
THEN
GRADE:=’B’;
ELSIF PERCENTAGE>=60 AND PERCENTAGE<70
THEN
GRADE:=’C’;
ELSE
GRADE:=’D’;
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT CODE IS:’||VAR1.STF_ID);
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT NAME IS:’||VAR1.STF_NAME);
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT MARK1 IS:’||VAR1.SUBJECT1);
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT MARK2 IS:’||VAR1.SUBJECT2);
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT MARK3 IS:’||VAR1.SUBJECT3);
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT TOTAL IS:’||TOT);
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT PERCENTAGE IS:’||PERCENTAGE);
DBMS_OUTPUT.PUT_LINE(‘THE STUDENT GRADE IS:’||GRADE);
END IF;
END;

6. CREATE OR REPLACE PROCEDURE STF_PROC(P_DPTNO STAFFF.DPTNO%TYPE)
AS
CURSOR STF1_CUR IS SELECT STF_ID,STF_NAME,STF_SAL FROM STAFFF WHERE DPTNO=P_DPTNO; 
V_STF1 STF1_CUR%ROWTYPE;
BEGIN
OPEN STF1_CUR;
FETCH STF1_CUR INTO V_STF1;
DBMS_OUTPUT.PUT_LINE('STAFF ID IS:’ || V_STF1.STF_ID);
DBMS_OUTPUT.PUT_LINE('STAFF NAME IS:’ || V_STF1. STF_NAME);
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS:’ || V_STF1.STF_SAL);
CLOSE STF1_CUR;
END;

LAB4. DATABASE PROGRAMMING

1. CREATE OR REPLACE PROCEDURE STF_PROC(P_DPTNO NUMBER)
AS
CURSOR STF1_CUR IS SELECT MAX(STF_SAL) FROM STAFFF WHERE DPTNO=P_DPTNO; 
VAR1 NUMBER(10);
BEGIN
OPEN STF1_CUR;
LOOP
FETCH STF1_CUR INTO VAR1;
EXIT WHEN STF1_CUR % NOTFOUND;
DBMS_OUTPUT.PUT_LINE('STAFF MAXIMUM SALARY :’ || VAR1);
END LOOP;
CLOSE STF1_CUR;
END;

2. CREATE OR REPLACE FUNCTION FUNC(P_AGE DATE)
RETURN NUMBER
IS
AGE NUMBER(10);
BEGIN
AGE:=MONTHS_BETWEEN(SYSDATE,P_AGE)/12;
RETURN AGE;
END;

DECLARE 
V_AGE NUMBER(10);
BEGIN
V_AGE:=FUNC(’28-APR-1997’);
DBMS_OUTPUT.PUT_LINE(‘AGE IS:’||V_AGE);
END;

3. CREATE OR REPLACE PROCEDURE STF_PROC(P_DPTNO NUMBER)
AS
VAR1 VARCHAR2(30);
BEGIN
SELECT UPPER(STF_NAME) INTO VAR1 FROM STAFFF WHERE DPTNO=P_DPTNO;
DBMS_OUTPUT.PUT_LINE('CONVERTED STAFF NAME:’ || VAR1);
END;

4. CREATE OR REPLACE PROCEDURE PROC(P_MNG VARCHAR)
AS
VAR1 STAFFF%ROWTYPE;
BEGIN
SELECT * INTO VAR1 FROM STAFFF WHERE DPTNO=P_MNG;
DBMS_OUTPUT.PUT_LINE(‘THE STAFF CODE IS:’||VAR1.STF_ID);
DBMS_OUTPUT.PUT_LINE(‘THE STAFF NAME IS:’||VAR1.STF_NAME);
DBMS_OUTPUT.PUT_LINE(‘THE DEPT NUM IS:’||VAR1.DEPT_NUM);
DBMS_OUTPUT.PUT_LINE(‘THE DEPT NAME IS:’||VAR1.MGR_NAME);
END;

5. CREATE OR REPLACE FUNCTION FUNC(P_STF_ID NUMBER)
RETURN NUMBER
AS
TA NUMBER(10);
HRA NUMBER(10);
DA NUMBER(10);
EXP NUMBER(10);
NUM NUMBER(10);
RES NUMBER(10);
VAR1 STAFFF%ROWTYPE;
BEGIN
SELECT * INTO VAR1 FROM STAFFF WHERE DPTNO=P_STF_ID;
TA:=VAR1.STF_SAL*0.08;
HRA:=VAR1.STF_SAL*0.20;
DA:=VAR1.STF_SAL*0.15;
NUM=TA+HRA+DA;
EXP:= MONTHS_BETWEEN(SYSDATE,VAR1.HIREDATE)/12;
IF EXP>=1 AND EXP<=2
THEN
RES:=VAR1.STF_SAL*0.10+NUM;
RETURN RES;
ELSIF EXP>=2 AND EXP<=4
THEN
RES:=VAR1.STF_SAL*0.20+NUM;
RETURN RES;
ELSE
RES:=VAR1.STF_SAL*0.30+NUM;
RETURN RES;
END IF;
END;

DECLARE
STF_ID NUMBER(10);
BEGIN
STF_ID:=FUNC(11);
DBMS_OUTPUT.PUT_LINE(‘COST IS:’||STF_ID);
END;


7. CREATE OR REPLACE PROCEDURE PROC(P_STF_ID NUMBER)
AS
VAR1 STAFFF%ROWTYPE;
EXP NUMBER(10);
SAL NUMBER(15);
BEGIN
SELECT * INTO VAR1 FROM STAFFF WHERE DPTNO=P_STF_ID;
EXP:= MONTHS_BETWEEN(SYSDATE,VAR1.HIREDATE)/12;
IF EXP>2 AND EXP<5
THEN
SAL:=VAR1.STF_SAL+VAR1.STF_SAL*0.20;
UPDATE STAFFF SET STF_SAL=SAL;
ELSE
SAL:= VAR1.STF_SAL+VAR1.STF_SAL*0.25;
UPDATE STAFFF SET STF_SAL=SAL;
DBMS_OUTPUT.PUT_LINE(‘THE STAFF NEW SALARY IS:’||VAR1.STF_SAL);
END IF;
END;



11. CREATE OR REPLACE FUNCTION GET_TOTAL_RECORDS(T_NAME VARCHAR)
RETURN NUMBER
IS
VAR1 NUMBER;
BEGIN
EXECUTE IMMEDIATE ‘SELECT COUNT(*) FROM ‘|| T_NAME INTO VAR1;
RETURN VAR;
END;

DECLARE
NAME NUMBER(30);
BEGIN
NAME:= GET_TOTAL_RECORDS(‘STAFFF’);
DBMS_OUTPUT.PUT_LINE(NAME);
END;
12. CREATE OR REPLACE PROCEDURE SALARY_UPDATE(P_STF_ID NUMBER)
AS
EMP_NAME VARCHAR2(20);
EMP_SAL NUMBER;
BEGIN
UPDATE EMP_NEW SET NEWSAL + NEWSAL*1.1 WHERE EMP_NO=P_STF_ID;
SELECT NAME,NEWSAL INTO EMP_NAME,EMP_SAL FROM EMP_NEW WHERE EMP_NO=P_STF_ID;
DBMS_OUTPUT.PUT_LINE(‘EMPLOYEE NAME:’||EMP_NAME);
DBMS_OUTPUT.PUT_LINE(‘EMPLOYEE NEW SALARY:’||EMP_SAL);
END;
















public Last updated: 2019-01-24 08:41:06 AM


Users - 2,047,956 | Recent Notes - 474,309
© 2009-2019 Anotepad.com

Home | Privacy | About | Features | Resume Builder | Free Fax

Anotepad.com is your online notepad on the web. It allows you to store notes on the GO without having to Login. 
You can use a rich text editor, sort notes by date or title and make notes private. 
Best of all - anotepad is a fast, clean, simple to use and FREE notepad online. 
